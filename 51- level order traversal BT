/*public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode A) {
      List<List<Integer>> ar = new ArrayList<>();
      Queue<TreeNode> q= new LinkedList<>();
        if(A==null){
            return ar;
        }
      q.add(A);
      while(!q.isEmpty()){
          ArrayList<Integer> l= new ArrayList<>();
          int size=q.size();
          
          for(int i=0;i<size;i++){
              TreeNode root=q.remove();
              l.add(root.val);
              if(root.left!=null){
                   q.add(root.left);
              }
              if(root.right!=null){
                  q.add(root.right);
              }
          }
          ar.add(l);
      }
      return ar;
    }
}
