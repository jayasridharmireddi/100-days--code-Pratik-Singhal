app1---brute force O(n*n)

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n=nums.length;
        int[] res= new int[n];
        
        for(int i=0;i<n;i++){
            int prod=1;
         for(int j=0;j<n;j++){
           if(j!=i){ 
             prod*=nums[j];
           }
         }
            res[i]=prod;
        }
        return res;
    }
}



opt- O(N)

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n=nums.length;
        int[] res= new int[n];
        int[] l= new int[n];
        for(int i=0;i<n;i++){
            if(i==0){
                l[i]=1;
            }
            else{
                l[i]=l[i-1]*nums[i-1];
            } 
        }
        for(int j=n-1;j>=0;j--){
            if(j==n-1){
                r[j]=1;
            }else{
                r[j]=r[j+1]*nums[j+1];
            }
            res[j]=l[j]*r[j];
        }
        return res;
    }
}
